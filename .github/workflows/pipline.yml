name: CI/CD Pipeline - Java, SonarQube, DockerHub

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: scoutingdb
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: tmpPass
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Show working directory
        run: ls -la

      - name: Build project with Maven (tests included)
        working-directory: scouting-service
        run: |
          docker run --rm \
            --network host \
            -e POSTGRES_DB=scoutingdb \
            -e POSTGRES_USER=postgres \
            -e POSTGRES_PASSWORD=tmpPass \
            -v "$PWD":/app \
            -w /app \
            maven:3.8.8-eclipse-temurin-21 \
            mvn clean verify

      - name: SonarQube Scan
        working-directory: scouting-service
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          docker run --rm \
            -e SONAR_HOST_URL="https://f9ba-105-66-132-136.ngrok-free.app" \
            -v "$PWD":/usr/src \
            sonarsource/sonar-scanner-cli \
            sonar-scanner \
              -Dsonar.projectKey=scouting-service \
              -Dsonar.sources=. \
              -Dsonar.java.binaries=target \
              -Dsonar.host.url=https://f9ba-105-66-132-136.ngrok-free.app \
              -Dsonar.login=$SONAR_TOKEN

      - name: Trivy scan - codebase
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          format: 'table'
          ignore-unfixed: true
          exit-code: '0'
          severity: 'CRITICAL,HIGH'

      - name: Build Docker image
        run: |
          docker build -t scouting-app:latest -f scouting-service/dockerfile scouting-service

      - name: Trivy scan - Docker image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'scouting-app:latest'
          format: 'table'
          ignore-unfixed: true
          exit-code: '0'
          severity: 'CRITICAL,HIGH'

      - name: Docker login
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Tag and push image to Docker Hub
        env:
          IMAGE_NAME: scouting-app
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        run: |
          DATE_TAG=$(date +'%Y-%m-%d-%H%M')
          docker tag $IMAGE_NAME:latest $DOCKERHUB_USERNAME/$IMAGE_NAME:$DATE_TAG
          docker tag $IMAGE_NAME:latest $DOCKERHUB_USERNAME/$IMAGE_NAME:latest
          docker push $DOCKERHUB_USERNAME/$IMAGE_NAME:$DATE_TAG
          docker push $DOCKERHUB_USERNAME/$IMAGE_NAME:latest
